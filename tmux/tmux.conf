#
# dotphiles : https://github.com/dotphiles/dotphiles
#
# Setup tmux
#
# Authors:
#   Ben O'Hara <bohara@gmail.com>
#

# Make clipboard work inside vim (OSX)
if-shell 'test "$(uname)" = "Darwin"' 'set-option -g default-command "reattach-to-user-namespace -l $SHELL"'

# Clipboard (OSX)
if-shell 'test "$(uname)" = "Darwin"' 'bind C-c run "tmux save-buffer - | reattach-to-user-namespace pbcopy"'
if-shell 'test "$(uname)" = "Darwin"' 'bind C-v run "reattach-to-user-namespace pbpaste | tmux load-buffer - && tmux paste-buffer"'

# 0 is too far from ` ;)
set -g base-index 1

set-option -g default-command $SHELL
set-option -g default-shell $SHELL

set-option -g prefix "C- "
bind " " next-window #send-prefix
bind "C- " last-window
bind-key a send-prefix

bind    -         split-window -v
bind    |         split-window -h
bind    \         split-window -h
bind    u         run-shell 'wemux display_users'
bind    x         kill-pane
bind    X         kill-window
bind -n "C-Left"  previous-window
bind -n "C-Right" next-window

bind    n         command-prompt 'rename-window %%'
bind    N         command-prompt 'rename-session %%'

bind -n F1        select-window -t 1
bind -n F2        select-window -t 2
bind -n F3        select-window -t 3
bind -n F4        select-window -t 4

bind -n F5        select-window -t 5
bind -n F6        select-window -t 6
bind -n F7        select-window -t 7
bind -n F8        select-window -t 8

bind -n F9        select-pane -t 0
bind -n F10       select-pane -t 1
bind -n F11       select-pane -t 2
bind -n F12       select-pane -t 3

bind -r Left      resize-pane -L 2
bind -r Right     resize-pane -R 2
bind -r Down      resize-pane -D 2
bind -r Up        resize-pane -U 2

bind    p         paste-buffer
bind-key -t vi-copy 'v' begin-selection
bind-key -t vi-copy 'y' copy-selection

bind    C-d       detach
bind    C-c       command-prompt "new-window -n '%1' '%1'"

bind "~" split-window -h "exec htop"

# Automatically set window title
set-window-option -g automatic-rename on
set-option -g set-titles on
set-option -g set-titles-string '[ #S | #I ] #W'

setw -g xterm-keys on
set -g default-terminal "screen-256color"
set -g status-keys vi
set -g history-limit 10000

setw -g mode-keys vi

# Mouse mode
setw -g mode-mouse on
set-option -g mouse-resize-pane on
set-option -g mouse-select-pane on
set-option -g mouse-select-window on
setw -g mouse-utf8 off

#bind-key Space choose-session

bind-key v split-window -h
bind-key s split-window -v

bind-key J resize-pane -D 5
bind-key K resize-pane -U 5
bind-key H resize-pane -L 5
bind-key L resize-pane -R 5

bind-key M-j resize-pane -D
bind-key M-k resize-pane -U
bind-key M-h resize-pane -L
bind-key M-l resize-pane -R

# Rather than constraining window size to the maximum size of any client
# connected to the *session*, constrain window size to the maximum size of any
# client connected to *that window*. Much more reasonable.
setw -g aggressive-resize on

# Vim style pane selection
bind    h select-pane -L
bind    j select-pane -D
bind    k select-pane -U
bind    l select-pane -R

# Use Alt-vim keys without prefix key to switch panes
bind -n M-h select-pane -L
bind -n M-j select-pane -D
bind -n M-k select-pane -U
bind -n M-l select-pane -R

# Use Alt-arrow keys without prefix key to switch panes
bind -n M-Left select-pane -L
bind -n M-Right select-pane -R
bind -n M-Up select-pane -U
bind -n M-Down select-pane -D

# Shift arrow to switch windows
bind -n S-Left  previous-window
bind -n S-Right next-window

# No delay for escape key press
set -sg escape-time 0

# Reload tmux config
bind r source-file ~/.tmux.conf \; display-message 'Releaded ~/.tmux.conf!'

# Set window notifications
setw -g monitor-activity on
set -g visual-activity off

#### COLOUR (Solarized dark)

# default statusbar colors
set-option -g status-bg black #base02
set-option -g status-fg yellow #yellow
set-option -g status-attr default

# default window title colors
set-window-option -g window-status-fg brightblue #base0
set-window-option -g window-status-bg default
#set-window-option -g window-status-attr dim

# active window title colors
set-window-option -g window-status-current-fg brightred #orange
set-window-option -g window-status-current-bg default
#set-window-option -g window-status-current-attr bright

# pane border
set-option -g pane-border-fg black #base02
set-option -g pane-active-border-fg brightgreen #base01

# message text
set-option -g message-bg black #base02
set-option -g message-fg brightred #orange

# Maximizing and restoring panes.
unbind +
bind + new-window -d -n tmp \; swap-pane -s tmp.0 \; select-window -t tmp
unbind -
bind - last-window \; swap-pane -s tmp.0 \; kill-window -t tmp

# Solarized Dark
set -g status-bg black
set -g status-fg blue
set-window-option -g window-status-current-fg white

#set -g status-position top
set -g status-left-length 32
set -g status-right-length 150

set -g status-fg blue
set -g status-bg black
# pane border
set-option -g pane-border-fg black
set-option -g pane-active-border-fg brightgreen
# pane number display
set-option -g display-panes-active-colour blue #blue
set-option -g display-panes-colour brightred #orange

# clock
set-window-option -g clock-mode-colour green #green

# Status
set -g status-right-length 50
set -g status-left-length 50

set-option -g display-panes-active-colour brightyellow
set-option -g display-panes-colour yellow
# Messages
set -g message-fg brightred
set -g message-bg black
set -g message-attr bold
# clock
set-window-option -g clock-mode-colour green
# window status
set -g window-status-format "#[fg=yellow,bg=black] #I #W "
set -g window-status-activity-attr bold
set -g window-status-current-format "#[fg=black,bg=yellow]⮀#[fg=black,bg=yellow,noreverse,bold] #I ⮁ #W #[fg=yellow,bg=black,nobold]⮀"
# statusbar
set -g status-left '#[fg=brightwhite,bg=blue,bold] ❐ #S #[fg=blue,bg=brightyellow,nobold]⮀#[fg=white,bg=brightyellow,bold] #(whoami) #[fg=brightyellow,bg=black,nobold]⮀'
set -g status-right ' %H:%M:%S %d-%b-%y '
